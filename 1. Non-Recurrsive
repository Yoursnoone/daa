1. Non-Recurrsive 
_____________________________________________________________________________________________________
(a) Factorial of a number.

#include<stdio.h>
#include<time.h>
int main()
{
	int n,i;
	unsigned long long factorial = 1;
	printf("Enter an integer :");
	scanf("%d",&n);
	//show error if the user enters a negative number
	
	if(n<0)
		printf("Error! Factorial of a negative number doesn't exist \n");
	else
		{
			for(i=1;i<=n;i++)
			{
				factorial*=i;		//factorial=factorial*i;
			}
			
			printf("Factorial of %d = %llu \n", n, factorial);
		}
		
	return 0;
}
_____________________________________________________________________________________________________
(b) Finding the maximum element.

#include<stdio.h>
#include<time.h>
int main()
{
	int i,n,max;
	int arr[100];
	printf("Enter total number of elements(1 to 100): \n");
	scanf("%d",&n);
	printf("\n");
	
	//stores number entered by the user
	
	for(i=0;i<n;i++)
	{
		printf("Enter number %d : \n", i+1);
		scanf("%d", &arr[i]);
	}

	//Loop to find the largest number
	
	max=arr[0];

	for(i=1;i<n;i++)
	{
		if(arr[i]>max)
		max=arr[i];
	}

	printf("largest element = %d \n", max);
	return 0;
}
_____________________________________________________________________________________________________
(c) Linear search.

#include<stdio.h>
#include<time.h>
int main()
{
	int array[100], search, c, number;
	printf("Enter the number of elements in array : \n");
	scanf("%d", &number);
	printf("Enter %d numbers --- \n", number);
	
	for(c=0; c<number; c++)
	{
		printf("Enter %d number : \n", c+1);
		scanf("%d", &array[c]);
	}
	
	printf("Enter the number to search \n");
	scanf("%d", &search);
	
	for(c=0; c<number; c++)
	{
		if(array[c]==search); /*if required element found*/
		{
			printf("%d is present at location %d\n", search,c+1);
			break;
		}
	}

	if(c==number)
		printf("%d is not present in array \n", search);
	return 0;
}
